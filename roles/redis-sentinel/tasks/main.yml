- name: BASE > Install base packages
  apt:
    name: "{{ item }}"
    state: latest
    update_cache: yes
  loop:
    - make
    - build-essential
    - tcl-dev
    - pkg-config
    - libjemalloc-dev
    - libhiredis-dev
  become: yes

- name: REDIS > Download package redis
  unarchive:
    src: "{{ redis_url }}"
    dest: /tmp
    remote_src: yes
  become: yes

- name: REDIS > Build redis-server
  make:
    chdir: /tmp/redis-{{ redis_version }}
  become: yes

- name: REDIS > Install redis-server
  make:
    chdir: /tmp/redis-{{ redis_version }}
    target: install
  become: yes
# - name: REDIS > Build redis-sentinel

- name: REDIS > Add the user
  user:
    name: "{{ redis_user }}"
    shell: /bin/false
    append: yes
    createhome: no
  become: yes

- name: REDIS > Create redis directory
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ redis_user }}"
    group: "{{ redis_user }}"
    mode: 0755
  loop:
    - /etc/redis
    - /var/lib/redis
    - /var/log/redis
  become: yes

- name: REDIS > Setup redis configure file
  copy:
    src: /tmp/redis-{{ redis_version }}/redis.conf
    dest: /etc/redis/redis.conf
    remote_src: yes
    owner: redis
    group: redis
  become: yes

- name: REDIS > Set directory install DB
  lineinfile:
    path: /etc/redis/redis.conf
    regexp: "^dir ./"
    line: "dir /var/lib/redis"
  become: yes

- name: REDIS > Create DB directory
  file:
    path: /var/lib/redis
    state: directory
    owner: redis
    group: redis
    mode: "765"
  become: yes

- name: REDIS > Config redis service
  template:
    src: redis.service.j2
    dest: "/etc/systemd/system/redis.service"
    mode: 0755
  become: yes

- name: Update redis.conf
  lineinfile:
    path: /etc/redis/redis.conf
    regexp: "^{{ item.split(':')[0].strip() | regex_escape() }}.*$"
    line: "{{ item.split(':')[0].strip() }} {{ item.split(':')[1].strip() }}"
    state: present
  loop: "{{ lookup('template', './redis.conf.j2').splitlines() | reject('match', '^$') | reject('match', '^#.*') | list }}"
  register: redis_conf_file
  become: yes

- name: REDIS > Setup redis-sentinel configure file
  copy:
    src: /tmp/redis-{{ redis_version }}/sentinel.conf
    dest: /etc/redis/redis-sentinel.conf
    remote_src: yes
    owner: redis
    group: redis
  become: yes

- name: REDIS > Config redis-sentinel service
  template:
    src: redis-sentinel.service.j2
    dest: "/etc/systemd/system/redis-sentinel.service"
    mode: 0755
    owner: redis
    group: redis
  become: yes

- name: Update sentinel.conf
  lineinfile:
    path: /etc/redis/redis-sentinel.conf
    regexp: "^{{ item.split(':')[0].strip() | regex_escape() }}.*$"
    line: "{{ item.split(':')[0].strip() }} {{ item.split(':')[1].strip() }}"
    state: present
  loop: "{{ lookup('template', './redis-sentinel.conf.j2').splitlines() | reject('match', '^$') | reject('match', '^#.*') | list }}"
  register: sentinel_conf_file
  become: yes

- name: REDIS > Restart & Enabled redis.service
  service:
    name: redis
    state: restarted
    enabled: yes
  become: yes

- name: restart sentinel
  service:
    name: redis-sentinel
    state: restarted
    enabled: yes
  become: yes

- name: REDIS > Check redis status
  shell: bash -lc "systemctl status redis"
  register: redis_status
- debug: var=redis_status.stdout_lines
